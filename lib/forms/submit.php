<?php

// Start a session
if ( !isset($_SESSION) ) session_start();

// Check for submitted values (allows for POST and GET methods, 
// but POST is preferred for security reasons)

if ( isset( $_POST ) ) {
	$submitted = $_POST;
}
elseif ( isset( $_GET ) ) {
	$submitted = $_GET;
}
else {
	return;
}

// Confirm that a form ID was provided. If not, the script will not know how 
// to handle this form submission (ie. validate and perform on-success operations)

if ( isset( $submitted['form_id'] ) ) {

	// *****************************************
	// General settings
	// *****************************************

	// These are used in the RSVP and contact form emails

	$website_name = 'Your Wedding Website';
	$website_url = 'http://myweddingtemplate.com';

	// *****************************************
	// Contact form preferences are defined here
	// *****************************************

	// Enter the email address of the person who should receive
	// email notifications when the form is submitted. If more than
	// one person, define an array of email addresses

	$contact_form_email_recipient = ''; 

	// Enter the subject of the email to be sent 

	$contact_form_email_subject = 'A new contact form submission';

	// Enter the URL where users should be redirected to after form submission

	$contact_form_redirect_url = '';

	// Enter the message displayed to users after submitting the form

	$contact_form_success_message = 'Form has been successfully submitted';

	// Define the fields and the validators for each field

	$contact_form_fields = array(
		'name' => array(
			'is_required' => 'Please provide your name.'
			),
		'email' => array(
			'is_required' => 'Please provide an email address.',
			'validate_email' => 'Please provide a valid email address.'
			),
		'phone' => array(
			'is_required' => 'Please provide a phone number.'
			),
		'comments' => array(
			'is_required' => 'Please leave a comment.'
			)
	);

	// *****************************************
	// RSVP form preferences are defined here
	// *****************************************


	// Enter the email address of the person who should receive
	// email notifications when the form is submitted. If more than
	// one person, define an array of email addresses

	$rsvp_email_recipient = ''; 

	// Enter the subject of the email to be sent 

	$rsvp_email_subject = 'A new RSVP notification';

	// Enter the URL where users should be redirected to after form submission

	$rsvp_redirect_url = '';

	// Enter the message displayed to users after submitting the form

	$rsvp_success_message = 'Form has been successfully submitted';

	// Define the fields and the validators for each field

	$rsvp_form_fields = array(
		'name' => array(
			'is_required' => 'Please provide your name.'
			),
		'email' => array(
			'is_required' => 'Please provide an email address.',
			'validate_email' => 'Please provide a valid email address.',
			),
		'attending' => array(
			'is_required' => 'Please indicate whether you will be attending.'
			),
		'request_gift_registry' => false
	);

	// *****************************************
	// Do not edit after this point unless you 
	// know what you're doing
	// *****************************************

	// Include form class
	require_once( 'form.class.php' );

	// Define preferences for each form
	switch ( $submitted['form_id'] ) {

		// Contact form
		case 'Contact form': 

			// Create the form instance and pass to it the array of fields
			$form = Osfa_Form::get_instance( $contact_form_fields );

			// Validate the form
			call_user_func( array( $form, 'validate' ), $form );

			// Proceed if form validates
			if ( call_user_func( array( $form, 'is_valid' ) ) ) {
				
				// Gather variables from submitted form
				$name = $submitted['name'];
				$comments = $submitted['comments'];
				$phone = $submitted['phone'];
				$email = $submitted['email'];

				// Message contents of contact form email
				$message = <<<PHP_EOD

You have received a new contact form submission from $website_name.

Names: $name
Email: $email
Phone: $phone
Message: $comments

-----------------

This message was auto-generated by $website_name. If you received it in error, contact the administrator of 
$website_url. 

Powered by Studio164a's Form Plugin.

PHP_EOD;

				// Add methods to execute on form success
				$form->add_success_method( 
					array( $form, 'send_email' ), 
					array( 
						'recipient' => $contact_form_email_recipient,
						'subject' => isset( $submitted['subject'] ) ? $submitted['subject'] : $contact_form_email_subject,
						'reply_to' => $email,
						'message' => $message
						) 
					);

				call_user_func( array( $form, 'submit' ) );
			}

			call_user_func( array( $form, 'save_session' ) );
			
			header( "Location: $contact_form_redirect_url" );

			break;	

		// RSVP form 			
		case 'RSVP':

			// Create the form instance and pass to it the array of fields
			$form = Osfa_Form::get_instance( $rsvp_form_fields );

			// Validate the form
			call_user_func( array( $form, 'validate' ), $form );

			// Proceed if form validates
			if ( call_user_func( array( $form, 'is_valid' ) ) ) {

				// Gather variables from submitted form
				$name = implode( ', ', $submitted['name'] );	
				$email = $submitted['email'];
				$attending = $submitted['attending'] ? 'We will be attending.' : 'We will not be attending.';
				$request_registry = isset( $submitted['request_gift_registry'] ) ? 'We would like to receive the gift registry.' : '';

				// Message contents of contact form email
				$message = <<<PHP_EOD

You have received a new RSVP from $website_name.

$attending
Names: $name
Contact Email: $email
$request_registry

-----------------

This message was auto-generated by $website_name. If you received it in error, contact the administrator of 
$website_url. 

Powered by Studio164a's Form Plugin.

PHP_EOD;

				// Add methods to execute on form success
				$form->add_success_method( 
					array( $form, 'send_email' ), 
					array( 
						'recipient' => $rsvp_email_recipient,
						'subject' => isset( $submitted['subject'] ) ? $submitted['subject'] : $rsvp_email_subject,
						'reply_to' => $email,
						'message' => $message
						) 
					);
				
				call_user_func( array( $form, 'submit' ) );
			}

			call_user_func( array( $form, 'save_session' ) );

			$redirect_to = $rsvp_redirect_url.'?status='.$rsvp_success_message;

			header( "Location: $redirect_to" );

			break;
	}
}